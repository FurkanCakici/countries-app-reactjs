{"version":3,"sources":["component/CountryCard.js","component/CountryList.js","component/Country.js","layout/Navbar.js","pages/About.js","pages/Contact.js","pages/NotFound.js","pages/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["CountryCard","country","className","to","name","src","flag","nativeName","CountryList","state","countries","searchHandler","e","Axios","get","target","value","then","response","setState","data","slice","countryList","this","map","ct","key","numericCode","type","placeholder","onChange","Component","Country","props","match","params","alt","capital","population","area","timezones","Navbar","style","color","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeclassname","About","href","Contact","NotFound","Welcome","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6908b8d8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst CountryCard = ({ country }) => {\r\n    return (\r\n        <div className=\"card my-2 bg-light text-dark text-center\">\r\n            <div className=\"card-body\">\r\n                <NavLink to={`country${country.name}`}>\r\n                    <h4 className=\"card-title h2\"><img src={country.flag} className=\"img-sm\" /> {country.name}</h4>\r\n                </NavLink>\r\n                <p className=\"h4\">{country.nativeName}</p>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default CountryCard;\r\n","import React, { Component } from 'react'\r\n// import Data from '../Data'\r\nimport CountryCard from './CountryCard'\r\nimport Axios from 'axios'\r\n\r\nclass CountryList extends Component {\r\n    state = {\r\n        countries: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get('https://restcountries.eu/rest/v2/all')\r\n            .then(response => {\r\n                this.setState({\r\n                    countries: response.data.slice(0, 54)\r\n                })\r\n            })\r\n    }\r\n\r\n    searchHandler = (e) => {\r\n        Axios.get(`https://restcountries.eu/rest/v2/name/${e.target.value}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    countries: response.data\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { countries } = this.state;\r\n        const countryList = countries.map(ct => {\r\n            return (\r\n                <CountryCard country={ct} key={ct.numericCode} />\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"col-12 col-sm-11 col-lg-8 my-2 mx-auto\">\r\n                <input type=\"text\" className=\"form-control bg-light text-dark\" placeholder=\"Ülke adı giriniz\" onChange={this.searchHandler}></input>\r\n                <div className=\"card-columns my-1\" >\r\n                    {countryList}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountryList\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\n\r\nclass Country extends Component {\r\n    state = {\r\n        country: {}\r\n    }\r\n    componentDidMount() {\r\n        let name = this.props.match.params.name;\r\n        Axios.get(`https://restcountries.eu/rest/v2/name/${name}?fullText=true`)\r\n            .then(response => {\r\n                this.setState({\r\n                    country: response.data[0]\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { country } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"col-12 col-sm-6 col-lg-4  my-2 mx-auto\">\r\n                    <img src={country.flag} alt=\"flags\" className=\"card-img-top\" />\r\n                    <div className=\"card-body bg-light\">\r\n                        <ul className=\"list-group list-group-flush bg-light\">\r\n                            <li className=\"list-group-item h1 text-center bg-light text-dark\">Ülke Adı : {country.name}</li>\r\n                            <li className=\"list-group-item h3\">Yerel Ad : {country.nativeName}</li>\r\n                            <li className=\"list-group-item h3\">Başkent : {country.capital}</li>\r\n                            <li className=\"list-group-item h3\">Nüfus : {country.population}</li>\r\n                            <li className=\"list-group-item h3\">Alan : {country.area} m2</li>\r\n                            <li className=\"list-group-item h3\">Saat Dilimi : {country.timezones}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Country;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div >\r\n            <nav className=\"container-fluid navbar navbar-expand-lg navbar-light bg-light h5\" >\r\n                <NavLink className=\"navbar-brand navbar-expand-md\" to=\"/home\" ><i className=\"fas fa-globe-asia fa-spin display-4\" style={{ color: \"#1B9CFC\" }}></i></NavLink>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <div className=\"navbar-nav \">\r\n                        <NavLink className=\"nav-item nav-link\" to=\"/home\" activeclassname=\"active\">ANASAYFA</NavLink>\r\n                        <NavLink className=\"nav-item nav-link\" to=\"/about\" activeclassname=\"active\">HAKKINDA</NavLink>\r\n                        <NavLink className=\"nav-item nav-link\" to=\"/contact\" activeclassname=\"active\">İLETİŞİM</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-12 col-sm-10 col-md-6 col-lg-8 mx-auto\">\r\n                <h1 className=\"h1 text-center\">Uygulama Hakkında</h1>\r\n                <hr />\r\n                <p className=\"h4 text-center\">50 den fazla ülke hakkında özet bilgiler sunan bir uygulamadır kendileri..</p>\r\n                <ul className=\"list-group text-center mx-auto h5 col-12 col-sm-6 col-md-8 col-lg-6\" >\r\n                    <li className=\"list-group-item active\">Neler Kullandım</li>\r\n                    <li className=\"list-group-item\"><i className=\"fas fa-check-circle mx-1\"></i>ReactJs</li>\r\n                    <li className=\"list-group-item\"><i className=\"fas fa-check-circle mx-1\"></i>ReactJs Router</li>\r\n                    <li className=\"list-group-item\"><i className=\"fas fa-check-circle mx-1\"></i>Axios</li>\r\n                    <li className=\"list-group-item\"><i className=\"fas fa-check-circle mx-1\"></i>Rest Contruies <a href=\"https://restcountries.eu/\" target=\"_blank\">(Link)</a> </li>\r\n                    <li className=\"list-group-item\"><i className=\"fas fa-check-circle mx-1\"></i>Font Awesome</li>\r\n                    <li className=\"list-group-item\"><i className=\"fas fa-check-circle mx-1\"></i>Bootstrap 4</li>\r\n                    <li className=\"list-group-item\"><i className=\"fas fa-check-circle mx-1\"></i>Gh-pages deploy</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div className=\"col-12 col-sm-5 col-lg-6 mx-auto\">\r\n            <h1 className=\"display-3 text-center\">İletişim</h1>\r\n            <hr />\r\n            <ul className=\"list-group text-center my-3\">\r\n                <li className=\"list-group-item active\"><i className=\"fas fa-check-circle mx-1\"></i>Site : <a href=\"https://furkancakici.github.io/\" target=\"_blank\" className=\"text-light\" >furkancakici.github.io (All Contact)</a> </li>\r\n                <li className=\"list-group-item active\"><i className=\"fas fa-check-circle mx-1\"></i>Mail : furkancakici25@gmail.com</li>\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-1 text-center my-5\">404 FATAL ERROR</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\nimport { Switch, Redirect } from 'react-router-dom'\r\nimport CountryList from '../component/CountryList'\r\n\r\n\r\nfunction Welcome() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Redirect to=\"/home\" />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome\r\n","import React from 'react';\nimport CountryList from './component/CountryList';\nimport Country from './component/Country';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Navbar from './layout/Navbar';\nimport About from './pages/About'\nimport Contact from './pages/Contact'\nimport NotFound from './pages/NotFound'\nimport Welcome from './pages/Welcome';\n\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route exact path=\"/home\" component={CountryList} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route exact path=\"/country:name\" component={Country} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// col-12 col-md-10 offset-md-1  col-lg-8 offset-lg-2","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}